# MongoDB Configuration
MONGO_INITDB_ROOT_USERNAME=andrewkrylov
MONGO_INITDB_ROOT_PASSWORD=12345dbscb # В реальном проекте используйте более сложный пароль
MONGO_DB_URL=mongodb://andrewkrylov:12345dbscb@mongo:27017/scb_db?authSource=admin # Используется бэкендом (в settings.MONGO_DB_URL)
MONGO_DB_NAME=scb_db # Используется бэкендом (в settings.MONGO_DB_NAME)

# ClickHouse Configuration
# Переменные, которые ожидает backend/app/core/config.py:
CLICKHOUSE_HOST=clickhouse # Имя сервиса ClickHouse в docker-compose.yml
CLICKHOUSE_PORT=8123 # Стандартный HTTP порт ClickHouse
CLICKHOUSE_USER=andrewkrylov # Используется бэкендом (в settings.CLICKHOUSE_USER)
CLICKHOUSE_PASSWORD=12345dbscb # В реальном проекте используйте более сложный пароль. Используется бэкендом (в settings.CLICKHOUSE_PASSWORD)
CLICKHOUSE_DB_FOR_SCB_WAREHOUSE=scb_warehouse # Используется бэкендом (в settings.CLICKHOUSE_DB_FOR_SCB_WAREHOUSE)

# Airflow Metadatabase (PostgreSQL) Configuration (Оставляем, т.к. они для Airflow)
AIRFLOW_DB_USER=airflow
AIRFLOW_DB_PASSWORD=airflow # В реальном проекте используйте более сложный пароль
AIRFLOW_DB_NAME=airflow

# Важно для корректной работы монтированных томов с правами (Оставляем, т.к. для Airflow)
AIRFLOW_UID=501 # ЗАМЕНИТЕ ЭТО на вывод команды `id -u`
AIRFLOW_GID=0

# --- Airflow Core Configuration --- (Оставляем, т.к. для Airflow)
AIRFLOW__CORE__EXECUTOR=CeleryExecutor
AIRFLOW__CORE__SQL_ALCHEMY_CONN=postgresql+psycopg2://${AIRFLOW_DB_USER}:${AIRFLOW_DB_PASSWORD}@postgres:5432/${AIRFLOW_DB_NAME}
AIRFLOW__CORE__LOAD_EXAMPLES=False
AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION=True
# AIRFLOW__CORE__FERNET_KEY= # Раскомментируйте и установите, если требуется фиксированный ключ

# --- Airflow Celery Configuration --- (Оставляем, т.к. для Airflow)
AIRFLOW__CELERY__BROKER_URL=redis://redis:6379/1
AIRFLOW__CELERY__RESULT_BACKEND=db+postgresql://${AIRFLOW_DB_USER}:${AIRFLOW_DB_PASSWORD}@postgres:5432/${AIRFLOW_DB_NAME}

# --- Backend Specific Configuration ---
# Эти переменные считываются напрямую из config.py (os.getenv) и не через settings Pydantic,
# если их нет в Config классе, но если они есть в Config (как SECRET_KEY), Pydantic их подхватит.
# PROJECT_NAME и API_V1_STR уже заданы по умолчанию в config.py, но их можно переопределить здесь.
# PROJECT_NAME="SCB DB Backend" 
# API_V1_STR="/api/v1"

# КРИТИЧЕСКИ ВАЖНО: Замените этот ключ на сложный, сгенерированный!
SECRET_KEY="your_very_strong_and_secret_random_key_here_please_replace_me_now"
# ALGORITHM="HS256" # Уже задан по умолчанию в config.py
# ACCESS_TOKEN_EXPIRE_MINUTES=11520 # Уже задан по умолчанию в config.py

# CORS - разрешенные источники. 
# config.py ожидает CORS_ORIGINS_STR.
# Это строка, разделенная запятыми.
CORS_ORIGINS_STR="http://localhost:5173,http://127.0.0.1:5173" 
# Если вы хотите использовать только значение по умолчанию из config.py ("http://localhost:5173"), эту строку можно закомментировать.

# --- Переменные для вашего DAG'а (Опционально, могут быть не нужны для бэкенда) ---
# Эти переменные не считываются напрямую backend/app/core/config.py,
# но могут быть полезны для ETL процессов, если они читают .env
# ONTOLOGY_GIT_REPO_PATH=/opt/airflow/ontology
# MONGO_URI_FOR_ETL=mongodb://${MONGO_INITDB_ROOT_USERNAME}:${MONGO_INITDB_ROOT_PASSWORD}@mongo:27017/
# MONGO_DB_NAME_FOR_ETL=scb_db_etl

# --- Общие замечания ---
# Используйте сильные и уникальные учетные данные для вашего локального .env файла!
# Этот файл .env не должен коммититься в Git. Файл .env.example - это шаблон.