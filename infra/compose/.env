# MongoDB Configuration
MONGO_INITDB_ROOT_USERNAME=andrewkrylov
MONGO_INITDB_ROOT_PASSWORD=12345dbscb # В реальном проекте используйте более сложный пароль
# >>> НИЖЕ ДОБАВЛЕНЫ ПЕРЕМЕННЫЕ ДЛЯ БЭКЕНДА <<<
MONGO_DB_URL=mongodb://andrewkrylov:12345dbscb@mongo:27017/scb_db?authSource=admin
MONGO_DB_NAME=scb_db

# ClickHouse Configuration
CLICKHOUSE_USER=andrewkrylov
CLICKHOUSE_PASSWORD=12345dbscb # В реальном проекте используйте более сложный пароль
CLICKHOUSE_DB=scb_warehouse

# Airflow Metadatabase (PostgreSQL) Configuration
AIRFLOW_DB_USER=airflow
AIRFLOW_DB_PASSWORD=airflow # В реальном проекте используйте более сложный пароль
AIRFLOW_DB_NAME=airflow

# Важно для корректной работы монтированных томов с правами
# Узнайте ваш локальный UID командой `id -u` в терминале
AIRFLOW_UID=501 # ЗАМЕНИТЕ ЭТО на вывод команды `id -u`
AIRFLOW_GID=0 # или ваш GID, если знаете и он отличается

# --- Airflow Core Configuration ---
AIRFLOW__CORE__EXECUTOR=CeleryExecutor # Устанавливаем CeleryExecutor
AIRFLOW__CORE__SQL_ALCHEMY_CONN=postgresql+psycopg2://${AIRFLOW_DB_USER}:${AIRFLOW_DB_PASSWORD}@postgres:5432/${AIRFLOW_DB_NAME}
AIRFLOW__CORE__LOAD_EXAMPLES=False # Отключаем загрузку примеров DAG'ов
AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION=True # DAG'и по умолчанию создаются в состоянии "paused"
# AIRFLOW__CORE__FERNET_KEY= # Если не генерируется автоматически, нужно сгенерировать и добавить

# --- Airflow Celery Configuration (обязательно для CeleryExecutor) ---
AIRFLOW__CELERY__BROKER_URL=redis://redis:6379/1 # URL вашего Redis брокера
AIRFLOW__CELERY__RESULT_BACKEND=db+postgresql://${AIRFLOW_DB_USER}:${AIRFLOW_DB_PASSWORD}@postgres:5432/${AIRFLOW_DB_NAME} # Используем метабазу для хранения результатов
# AIRFLOW__CELERY__FLOWER_PORT=5555 # Опционально, для Flower UI (мониторинг Celery)

# --- Airflow Webserver Configuration (опционально, для настройки через .env) ---
# AIRFLOW__WEBSERVER__RBAC=True # Включить Role-Based Access Control (обычно включено по умолчанию)

# >>> НИЖЕ ДОБАВЛЕНЫ ПЕРЕМЕННЫЕ ДЛЯ БЭКЕНДА <<<
# Backend specific
# Замените "your_strong_secret_key_here_please_replace_me" на сгенерированный ключ.
# Можно сгенерировать, например, командой: openssl rand -hex 32
SECRET_KEY=12345
ALGORITHM=HS256
ACCESS_TOKEN_EXPIRE_MINUTES=11520 # Пример: 8 дней

# CORS - разрешенные источники (для локальной разработки фронтенда)
CORS_ORIGINS=["http://localhost:5173", "http://127.0.0.1:5173"]

# --- Переменные для вашего DAG'а (можно также задавать через UI Airflow или конфигурацию DAG) ---
# Эти переменные специфичны для ваших DAG'ов и могут быть добавлены по мере необходимости
# ONTOLOGY_GIT_REPO_PATH=/opt/airflow/ontology # Пример пути к смонтированной папке онтологии внутри контейнера
# MONGO_URI_FOR_ETL=mongodb://${MONGO_INITDB_ROOT_USERNAME}:${MONGO_INITDB_ROOT_PASSWORD}@mongo:27017/
# MONGO_DB_NAME_FOR_ETL=scb_db_etl # Пример, если используется отдельная БД для ETL результатов в Mongo

# --- Общие замечания ---
# Используйте сильные и уникальные учетные данные для вашего локального .env файла!
# Этот файл .env не должен коммититься в Git. Файл .env.example - это шаблон.