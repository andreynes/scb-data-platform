# MongoDB Configuration
MONGO_INITDB_ROOT_USERNAME=andrewkrylov
MONGO_INITDB_ROOT_PASSWORD=12345dbscb # В реальном проекте используйте более сложный пароль
MONGO_DB_URL=mongodb://andrewkrylov:12345dbscb@mongo:27017/scb_db?authSource=admin # Используется бэкендом
MONGO_DB_NAME=scb_db # Используется бэкендом

# ClickHouse Configuration
CLICKHOUSE_USER=andrewkrylov
CLICKHOUSE_PASSWORD=12345dbscb # В реальном проекте используйте более сложный пароль
CLICKHOUSE_DB=scb_warehouse

# Airflow Metadatabase (PostgreSQL) Configuration
AIRFLOW_DB_USER=airflow
AIRFLOW_DB_PASSWORD=airflow # В реальном проекте используйте более сложный пароль
AIRFLOW_DB_NAME=airflow

# Важно для корректной работы монтированных томов с правами
AIRFLOW_UID=501 # ЗАМЕНИТЕ ЭТО на вывод команды `id -u`
AIRFLOW_GID=0

# --- Airflow Core Configuration ---
AIRFLOW__CORE__EXECUTOR=CeleryExecutor
AIRFLOW__CORE__SQL_ALCHEMY_CONN=postgresql+psycopg2://${AIRFLOW_DB_USER}:${AIRFLOW_DB_PASSWORD}@postgres:5432/${AIRFLOW_DB_NAME}
AIRFLOW__CORE__LOAD_EXAMPLES=False
AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION=True
# AIRFLOW__CORE__FERNET_KEY= # Раскомментируйте и установите, если требуется фиксированный ключ

# --- Airflow Celery Configuration ---
AIRFLOW__CELERY__BROKER_URL=redis://redis:6379/1
AIRFLOW__CELERY__RESULT_BACKEND=db+postgresql://${AIRFLOW_DB_USER}:${AIRFLOW_DB_PASSWORD}@postgres:5432/${AIRFLOW_DB_NAME}

# --- Backend Specific Configuration ---
PROJECT_NAME="SCB DB Backend" # Название проекта для OpenAPI
API_V1_STR="/api/v1"           # Префикс для API v1

# КРИТИЧЕСКИ ВАЖНО: Замените этот ключ на сложный, сгенерированный!
# Пример генерации в Python: import secrets; secrets.token_hex(32)
# Или в терминале: openssl rand -hex 32
SECRET_KEY="your_very_strong_and_secret_random_key_here_please_replace_me_now"
ALGORITHM="HS256"
ACCESS_TOKEN_EXPIRE_MINUTES=11520 # 8 дней (60 * 24 * 8)

# CORS - разрешенные источники. Pydantic Settings ожидает список строк.
# В .env это обычно строка, разделенная запятыми. config.py преобразует ее в список.
# Если ваш pydantic_settings настроен на авто-разделение строки по запятой:
CORS_ORIGINS='["http://localhost:5173", "http://127.0.0.1:5173", "http://localhost:3000"]'
# Если pydantic_settings ожидает JSON-строку для списка, то:
# CORS_ORIGINS='["http://localhost:5173", "http://127.0.0.1:5173"]'
# Убедитесь, что ваша модель Settings в config.py правильно парсит это (обычно pydantic-settings делает это для List[str])

# --- Переменные для вашего DAG'а (Опционально, могут быть не нужны для бэкенда) ---
# ONTOLOGY_GIT_REPO_PATH=/opt/airflow/ontology
# MONGO_URI_FOR_ETL=mongodb://${MONGO_INITDB_ROOT_USERNAME}:${MONGO_INITDB_ROOT_PASSWORD}@mongo:27017/
# MONGO_DB_NAME_FOR_ETL=scb_db_etl

# --- Общие замечания ---
# Используйте сильные и уникальные учетные данные для вашего локального .env файла!
# Этот файл .env не должен коммититься в Git. Файл .env.example - это шаблон.